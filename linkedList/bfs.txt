https://leetcode.com/problems/number-of-islands/submissions/

class Solution {
    //Right, Down, Left, Up
    public static int[] DIRX = new int[]{1, 0, -1, 0};
    public static int[] DIRY = new int[]{0, 1, 0, -1};
        
    public boolean isValid(int x, int y, int m, int n) {
        if(x<m && x>=0 && y<n && y>=0) return true;
        return false;
    }
    
    public void dfs(char[][] grid, int i, int j, int m, int n) {
        for(int k=0 ; k<4; k++) {
            int x = i + Solution.DIRX[k];
            int y = j + Solution.DIRY[k];
            if(isValid(x, y, m, n) && grid[x][y] == '1') {
                grid[x][y] = '0';
                dfs(grid, x, y, m ,n);
            }
        }
    }
    
    public int numIslands(char[][] grid) {
        int m = grid.length, n = grid[0].length, i,j, count=0;
        for(i=0;i<m;i++) {
            for(j=0;j<n;j++) {
                if(grid[i][j]=='1') {
                    dfs(grid, i, j, m, n);
                    count++;
                }
            }
        }
        return count;
    }
}